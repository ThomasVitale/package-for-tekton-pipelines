apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  creationTimestamp: null
  name: tekton-pipelines.packages.kadras.io.0.0.0
spec:
  licenses:
  - Apache 2.0
  refName: tekton-pipelines.packages.kadras.io
  releaseNotes: https://github.com/tektoncd/pipeline/releases
  releasedAt: null
  template:
    spec:
      deploy:
      - kapp: {}
      fetch:
      - git: {}
      template:
      - ytt:
          paths:
          - config
      - kbld: {}
  valuesSchema:
    openAPIv3:
      type: object
      additionalProperties: false
      properties:
        defaults:
          type: object
          additionalProperties: false
          description: Default configuration stored in the config-defaults ConfigMap.
          properties:
            timeout_minutes:
              type: string
              description: Number of minutes to use for TaskRun and PipelineRun, if none is specified.
              default: "60"
            service_account:
              type: string
              description: Service account name to use for TaskRun and PipelineRun, if none is specified.
              default: default
            managed_by_label_value:
              type: string
              description: Value given to the 'app.kubernetes.io/managed-by' label applied to all Pods created for TaskRuns.
              default: tekton-pipelines
            pod_template:
              type: string
              description: Pod template to use for TaskRun and PipelineRun.
              default: ""
            affinity_assistant_pod_template:
              type: string
              description: Pod template to use for affinity assistant pods.
              default: ""
            cloud_events_sink:
              type: string
              description: CloudEvents sink to be used for TaskRun and PipelineRun. If no sink is specified, no CloudEvent is generated.
              default: ""
            task_run_workspace_binding:
              type: string
              description: Workspace configuration provided for any Workspaces that a Task declares but that a TaskRun does not explicitly provide.
              x-example-description: Use emptyDir volume for workspace
              example: 'emptyDir: {}'
              default: ""
            max_matrix_combinations_count:
              type: string
              description: Maximum number of combinations from a Matrix, if none is specified.
              default: "256"
        feature_flags:
          type: object
          additionalProperties: false
          description: Feature flags configuration stored in the feature-flags ConfigMap.
          properties:
            await_sidecar_readiness:
              type: string
              description: Setting this flag to 'false' will stop Tekton from waiting for a TaskRun's sidecar containers to be running before starting the first step. This will allow Tasks to be run in environments that don't support the DownwardAPI volume type, but may lead to unintended behaviour if sidecars are used.
              default: "true"
            disable_affinity_assistant:
              type: string
              description: Setting this flag to 'true' will prevent Tekton to create an Affinity Assistant for every TaskRun sharing a PVC workspace.
              default: "false"
            disable_creds_init:
              type: string
              description: Setting this flag to 'true' will prevent Tekton scanning attached service accounts and injecting any credentials it finds into your Steps.
              default: "false"
            enable_api_fields:
              type: string
              description: Setting this flag will determine which gated features are enabled.
              default: stable
            enable_custom_tasks:
              type: string
              description: Setting this flag to 'true' enables the use of custom tasks from within pipelines. This is an experimental feature and thus should still be considered an alpha feature.
              default: "false"
            enable_provenance_in_status:
              type: string
              description: Setting this flag to 'true' enables populating the 'provenance' field in TaskRun and PipelineRun status. This field contains metadata about resources used in the TaskRun/PipelineRun such as the source from where a remote Task/Pipeline definition was fetched.
              default: "false"
            enable_tekton_oci_bundles:
              type: string
              description: Setting this flag to 'true' enables the use of Tekton OCI bundle. This is an experimental feature and thus should still be considered an alpha feature.
              default: "false"
            require_git_ssh_secret_known_hosts:
              type: string
              description: Setting this flag to 'true' will require that any Git SSH Secret offered to Tekton must have known_hosts included.
              default: "false"
            resource_verification_mode:
              type: string
              description: Setting this flag to 'enforce' will enforce verification of tasks/pipeline. Failing to verify will fail the taskrun/pipelinerun. 'warn' will only log the err message and 'skip' will skip the whole verification.
              default: skip
            running_in_environment_with_injected_sidecars:
              type: string
              description: This option should be set to 'false' when Pipelines is running in a cluster that does not use injected sidecars such as Istio. Setting it to false should decrease the time it takes for a TaskRun to start running. For clusters that use injected sidecars, setting this option to false can lead to unexpected behavior.
              default: "true"
            send_cloudevents_for_runs:
              type: string
              description: Setting this flag to 'true' enables CloudEvents for Runs, as long as a CloudEvents sink is configured in the config-defaults config map.
              default: "false"
  version: 0.0.0

---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: PackageMetadata
metadata:
  creationTimestamp: null
  name: tekton-pipelines.packages.kadras.io
spec:
  categories:
  - ci/cd
  displayName: tekton-pipelines
  longDescription: A cloud native solution for building CI/CD pipelines.
  maintainers:
  - name: Thomas Vitale
  providerName: Arktonix
  shortDescription: A cloud native solution for building CI/CD pipelines.

---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  annotations:
    kctrl.carvel.dev/local-fetch-0: .
  creationTimestamp: null
  name: tekton-pipelines
spec:
  packageRef:
    refName: tekton-pipelines.packages.kadras.io
    versionSelection:
      constraints: 0.0.0
  serviceAccountName: kadras-install-sa
status:
  conditions: null
  friendlyDescription: ""
  observedGeneration: 0
