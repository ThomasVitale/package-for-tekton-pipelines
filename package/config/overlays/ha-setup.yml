#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#! Tekton Pipelines can be configured with high availability support.
#! See: https://tekton.dev/docs/pipelines/enabling-ha

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"tekton-pipelines-controller", "namespace": "tekton-pipelines"}}), expects=1
---
spec:
  #@overlay/match missing_ok=True
  replicas: #@ data.values.controllers.pipelines.replicas

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"tekton-pipelines-remote-resolvers", "namespace": "tekton-pipelines-resolvers"}}), expects=1
---
spec:
  #@overlay/match missing_ok=True
  replicas: #@ data.values.controllers.resolvers.replicas

#@ if data.values.webhook.pdb.enable:

#@overlay/match by=overlay.subset({"kind":"HorizontalPodAutoscaler", "metadata":{"name":"tekton-pipelines-webhook", "namespace": "tekton-pipelines"}}), expects=1
---
spec:
  minReplicas: 2

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
spec:
  minAvailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines

#@ end